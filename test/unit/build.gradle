/*
 * ProGuard -- shrinking, optimization, obfuscation, and preverification
 *             of Java bytecode.
 *
 * Copyright (c) 2002-2020 Guardsquare NV
 */

buildscript {
    ext.kotlin_version = '1.3.72'
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:9.2.1"
    }
}

plugins {
    id 'com.adarshr.test-logger' version '2.0.0'
    id 'de.jansauer.printcoverage' version '2.0.0'
}

apply plugin: 'kotlin'
apply plugin: 'org.jlleitschuh.gradle.ktlint'
apply plugin: 'java'
apply plugin: 'jacoco'

sourceSets.test {
    java {
        srcDirs = ['src']
    }
    resources {
        srcDirs = ['src']
    }
}

dependencies {
    testImplementation group: 'org.codehaus.janino', name: 'janino', version: '3.1.2' // fast in-memory java compiler
    testImplementation 'io.kotest:kotest-runner-junit5-jvm:4.3.2' // for kotest framework
    testImplementation 'io.kotest:kotest-assertions-core-jvm:4.3.2' // for kotest core jvm assertions
    testImplementation 'io.kotest:kotest-property-jvm:4.3.2' // for kotest property test
    testImplementation "io.mockk:mockk:1.10.0" // for mocking
    testImplementation rootProject // the code we're testing
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    // Define which classes need to be monitored
    def sources = files(rootProject.sourceSets.main.allSource.srcDirs)
    sourceDirectories.setFrom(sources)
    additionalSourceDirs.setFrom(sources)
    sourceDirectories.setFrom(sources)
    def classes = files(rootProject.sourceSets.main.output.classesDirs)
    classDirectories.setFrom(classes)

    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/reports/coverage")
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}
